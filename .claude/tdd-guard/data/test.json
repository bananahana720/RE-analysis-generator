{
  "testModules": [
    {
      "moduleId": "tests/collectors/test_integration_validation.py",
      "tests": [
        {
          "name": "test_foundation_logger_integration",
          "fullName": "tests/collectors/test_integration_validation.py::TestEpic1FoundationIntegration::test_foundation_logger_integration",
          "state": "failed",
          "errors": [
            {
              "message": "self = <collectors.test_integration_validation.TestEpic1FoundationIntegration object at 0x000002815A3FB9D0>\nfoundation_config = <Mock spec='ConfigProvider' id='2754601454624'>\nfoundation_repository = <Mock spec='PropertyRepository' id='2754601455632'>\n\n    def test_foundation_logger_integration(self, foundation_config, foundation_repository):\n        \"\"\"Test that collector uses foundation logging correctly.\"\"\"\n        with patch('phoenix_real_estate.foundation.logging.factory.get_logger') as mock_get_logger:\n            mock_logger = Mock()\n            mock_get_logger.return_value = mock_logger\n    \n>           collector = MaricopaAPICollector(\n                config=foundation_config,\n                repository=foundation_repository,\n                logger_name=\"test.collector\"\n            )\n\ntests\\collectors\\test_integration_validation.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\phoenix_real_estate\\collectors\\maricopa\\collector.py:77: in __init__\n    self.client = client or MaricopaAPIClient(config)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <phoenix_real_estate.collectors.maricopa.client.MaricopaAPIClient object at 0x000002815B0A9BE0>\nconfig = <Mock spec='ConfigProvider' id='2754601454624'>\nrequests_per_hour = None\n\n    def __init__(self, config: ConfigProvider, requests_per_hour: Optional[int] = None) -> None:\n        \"\"\"Initialize the Maricopa API client.\n    \n        Args:\n            config: Configuration provider from Epic 1 foundation\n            requests_per_hour: Override default rate limit\n    \n        Raises:\n            ConfigurationError: If required configuration is missing\n        \"\"\"\n        self.config = config\n        self.logger: Logger = get_logger(\"collectors.maricopa.client\")\n    \n        # Load configuration\n        self._load_config()\n    \n        # Set up rate limiting (convert hourly limit to per-minute)\n        actual_requests_per_hour = requests_per_hour or self.rate_limit\n>       requests_per_minute = actual_requests_per_hour / 60.0\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       TypeError: unsupported operand type(s) for /: 'Mock' and 'float'\n\nsrc\\phoenix_real_estate\\collectors\\maricopa\\client.py:71: TypeError"
            }
          ]
        },
        {
          "name": "test_foundation_exception_hierarchy",
          "fullName": "tests/collectors/test_integration_validation.py::TestEpic1FoundationIntegration::test_foundation_exception_hierarchy",
          "state": "failed",
          "errors": [
            {
              "message": "self = <collectors.test_integration_validation.TestEpic1FoundationIntegration object at 0x000002815AFFED50>\nfoundation_config = <Mock spec='ConfigProvider' id='2754601460000'>\nfoundation_repository = <Mock spec='PropertyRepository' id='2754601462688'>\n\n    def test_foundation_exception_hierarchy(self, foundation_config, foundation_repository):\n        \"\"\"Test proper use of foundation exception hierarchy.\"\"\"\n>       collector = MaricopaAPICollector(foundation_config, foundation_repository)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\collectors\\test_integration_validation.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\phoenix_real_estate\\collectors\\maricopa\\collector.py:77: in __init__\n    self.client = client or MaricopaAPIClient(config)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <phoenix_real_estate.collectors.maricopa.client.MaricopaAPIClient object at 0x000002815C25C690>\nconfig = <Mock spec='ConfigProvider' id='2754601460000'>\nrequests_per_hour = None\n\n    def __init__(self, config: ConfigProvider, requests_per_hour: Optional[int] = None) -> None:\n        \"\"\"Initialize the Maricopa API client.\n    \n        Args:\n            config: Configuration provider from Epic 1 foundation\n            requests_per_hour: Override default rate limit\n    \n        Raises:\n            ConfigurationError: If required configuration is missing\n        \"\"\"\n        self.config = config\n        self.logger: Logger = get_logger(\"collectors.maricopa.client\")\n    \n        # Load configuration\n        self._load_config()\n    \n        # Set up rate limiting (convert hourly limit to per-minute)\n        actual_requests_per_hour = requests_per_hour or self.rate_limit\n>       requests_per_minute = actual_requests_per_hour / 60.0\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       TypeError: unsupported operand type(s) for /: 'Mock' and 'float'\n\nsrc\\phoenix_real_estate\\collectors\\maricopa\\client.py:71: TypeError"
            }
          ]
        },
        {
          "name": "test_foundation_config_integration",
          "fullName": "tests/collectors/test_integration_validation.py::TestEpic1FoundationIntegration::test_foundation_config_integration",
          "state": "failed",
          "errors": [
            {
              "message": "self = <collectors.test_integration_validation.TestEpic1FoundationIntegration object at 0x000002815B068FC0>\nfoundation_repository = <Mock spec='PropertyRepository' id='2754601464704'>\n\n    def test_foundation_config_integration(self, foundation_repository):\n        \"\"\"Test configuration provider integration.\"\"\"\n        # Test missing required config\n        bad_config = Mock(spec=ConfigProvider)\n        bad_config.get.return_value = None\n        bad_config.get_typed = Mock(return_value={})\n    \n>       collector = MaricopaAPICollector(bad_config, foundation_repository)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\collectors\\test_integration_validation.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\phoenix_real_estate\\collectors\\maricopa\\collector.py:77: in __init__\n    self.client = client or MaricopaAPIClient(config)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc\\phoenix_real_estate\\collectors\\maricopa\\client.py:67: in __init__\n    self._load_config()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <phoenix_real_estate.collectors.maricopa.client.MaricopaAPIClient object at 0x000002815C25CCD0>\n\n    def _load_config(self) -> None:\n        \"\"\"Load and validate Epic 1 configuration.\"\"\"\n        try:\n            # Epic 1 configuration keys\n            self.api_key = self.config.get(\"MARICOPA_API_KEY\")\n            self.base_url = self.config.get(\n                \"MARICOPA_BASE_URL\", \"https://api.assessor.maricopa.gov/v1\"\n            )\n            self.rate_limit = self.config.get_int(\"MARICOPA_RATE_LIMIT\", 1000)\n            self.timeout_seconds = self.config.get_int(\"MARICOPA_TIMEOUT\", 30)\n    \n            if not self.api_key:\n>               raise ConfigurationError(\"Missing required config: MARICOPA_API_KEY\")\nE               phoenix_real_estate.foundation.utils.exceptions.ConfigurationError: Missing required config: MARICOPA_API_KEY\n\nsrc\\phoenix_real_estate\\collectors\\maricopa\\client.py:105: ConfigurationError"
            }
          ]
        },
        {
          "name": "test_foundation_repository_integration",
          "fullName": "tests/collectors/test_integration_validation.py::TestEpic1FoundationIntegration::test_foundation_repository_integration",
          "state": "failed",
          "errors": [
            {
              "message": "self = <collectors.test_integration_validation.TestEpic1FoundationIntegration object at 0x000002815B069CD0>\nfoundation_config = <Mock spec='ConfigProvider' id='2754619031632'>\n\n    def test_foundation_repository_integration(self, foundation_config):\n        \"\"\"Test repository integration for data storage.\"\"\"\n        repo = Mock(spec=PropertyRepository)\n        repo.find_by_id.return_value = None\n        repo.save.return_value = True\n        repo.find_updated_since.return_value = []\n    \n>       collector = MaricopaAPICollector(foundation_config, repo)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\collectors\\test_integration_validation.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\phoenix_real_estate\\collectors\\maricopa\\collector.py:77: in __init__\n    self.client = client or MaricopaAPIClient(config)\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <phoenix_real_estate.collectors.maricopa.client.MaricopaAPIClient object at 0x000002815B06BBB0>\nconfig = <Mock spec='ConfigProvider' id='2754619031632'>\nrequests_per_hour = None\n\n    def __init__(self, config: ConfigProvider, requests_per_hour: Optional[int] = None) -> None:\n        \"\"\"Initialize the Maricopa API client.\n    \n        Args:\n            config: Configuration provider from Epic 1 foundation\n            requests_per_hour: Override default rate limit\n    \n        Raises:\n            ConfigurationError: If required configuration is missing\n        \"\"\"\n        self.config = config\n        self.logger: Logger = get_logger(\"collectors.maricopa.client\")\n    \n        # Load configuration\n        self._load_config()\n    \n        # Set up rate limiting (convert hourly limit to per-minute)\n        actual_requests_per_hour = requests_per_hour or self.rate_limit\n>       requests_per_minute = actual_requests_per_hour / 60.0\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       TypeError: unsupported operand type(s) for /: 'Mock' and 'float'\n\nsrc\\phoenix_real_estate\\collectors\\maricopa\\client.py:71: TypeError"
            }
          ]
        }
      ]
    }
  ]
}