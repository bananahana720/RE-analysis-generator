name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

env:
  TEST_MONGODB_URL: mongodb://admin:${{ secrets.TEST_MONGODB_PASSWORD }}@localhost:27017/
  PYTHON_VERSION: "3.13"

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run pip-audit
      run: |
        uv run pip install pip-audit
        uv run pip-audit --format=json --output=vulnerability-report.json
    
    - name: Upload vulnerability report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: vulnerability-report
        path: vulnerability-report.json

  secret-detection:
    name: Secret Detection
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  code-security-scan:
    name: Static Code Security Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run Bandit
      run: |
        uv run pip install bandit
        uv run bandit -r src/ -f json -o bandit-report.json
    
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: bandit-report.json

  compliance-check:
    name: Security Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Validate secrets setup
      run: |
        if ! python scripts/setup_secrets.py validate .env; then
          echo "❌ Critical: .env validation failed - security requirements not met"
          exit 1
        fi
        echo "✅ Secret validation passed"
    
    - name: Check security files
      run: |
        required_files=("scripts/setup_secrets.py" "scripts/validate_secrets.py" ".gitleaks.toml" "CODEOWNERS")
        for file in "${required_files[@]}"; do
          if [ \! -f "$file" ]; then
            echo "Missing: $file"
            exit 1
          fi
        done
        echo "All security files present"
