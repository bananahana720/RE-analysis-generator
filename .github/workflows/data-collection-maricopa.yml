name: Maricopa County Data Collection

on:
  schedule:
    # Daily at 3 AM Phoenix time (10 AM UTC)
    - cron: "0 10 * * *"
  workflow_dispatch:
    inputs:
      zip_codes:
        description: "ZIP codes (comma-separated)"
        required: false
        type: string
        default: "85031,85033,85035"
      collection_mode:
        description: "Collection mode"
        required: false
        type: choice
        options: ["full", "incremental", "test"]
        default: "incremental"
  workflow_call:
    inputs:
      zip_codes:
        description: "ZIP codes (comma-separated)"
        required: false
        type: string
        default: "85031,85033,85035"
      collection_mode:
        description: "Collection mode"
        required: false
        type: string
        default: "incremental"

permissions:
  contents: read
  issues: write

env:
  PYTHON_VERSION: "3.13"
  COLLECTION_TIMEOUT: 25

concurrency:
  group: maricopa-collection-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-secrets:
    name: Validate Secrets
    uses: ./.github/workflows/validate-secrets.yml
    with:
      environment: production
    secrets: inherit

  collect-maricopa:
    name: Collect Maricopa Data
    runs-on: ubuntu-latest
    needs: validate-secrets
    timeout-minutes: 30
    environment: production
    
    strategy:
      matrix:
        zip_code: ["85031", "85033", "85035"]
      fail-fast: false
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: uv sync --extra dev
    
    - name: Setup collection environment
      env:
        MARICOPA_API_KEY: ${{ secrets.MARICOPA_API_KEY }}
        ZIP_CODE: ${{ matrix.zip_code }}
        COLLECTION_MODE: ${{ inputs.collection_mode || github.event.inputs.collection_mode || "incremental" }}
      run: |
        mkdir -p data/{raw,processed} logs
        echo "[OK] Collection environment setup for ZIP $ZIP_CODE"
    
    - name: Execute Maricopa collection with retry
      env:
        MARICOPA_API_KEY: ${{ secrets.MARICOPA_API_KEY }}
        ZIP_CODE: ${{ matrix.zip_code }}
        COLLECTION_MODE: ${{ inputs.collection_mode || github.event.inputs.collection_mode || "incremental" }}
      run: |
        max_attempts=3
        attempt=1
        
        while [ $attempt -le $max_attempts ]; do
          echo "[ATTEMPT] Maricopa collection attempt $attempt/$max_attempts for ZIP $ZIP_CODE"
          
          if uv run python scripts/testing/test_maricopa_collector.py             --zip-code "$ZIP_CODE"             --mode "$COLLECTION_MODE"             --timeout 20; then
            echo "[OK] Maricopa collection successful for ZIP $ZIP_CODE"
            break
          else
            echo "[WARN] Collection attempt $attempt failed for ZIP $ZIP_CODE"
            if [ $attempt -eq $max_attempts ]; then
              echo "[FAIL] All collection attempts failed for ZIP $ZIP_CODE"
              exit 1
            fi
            attempt=$((attempt + 1))
            sleep 30
          fi
        done
      timeout-minutes: ${{ env.COLLECTION_TIMEOUT }}
    
    - name: Validate collection results
      run: |
        if [ -f data/raw/maricopa_${{ matrix.zip_code }}_*.json ]; then
          file_count=$(ls data/raw/maricopa_${{ matrix.zip_code }}_*.json | wc -l)
          echo "[OK] Found $file_count Maricopa data files for ZIP ${{ matrix.zip_code }}"
        else
          echo "[WARN] No Maricopa data files found for ZIP ${{ matrix.zip_code }}"
          exit 1
        fi
    
    - name: Upload Maricopa artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: maricopa-data-${{ matrix.zip_code }}-${{ github.run_number }}
        path: |
          data/raw/maricopa_*.json
          logs/maricopa_*.log
        retention-days: 7

  collection-summary:
    name: Collection Summary
    runs-on: ubuntu-latest
    needs: collect-maricopa
    if: always()
    
    steps:
    - name: Determine collection status
      id: status
      run: |
        success_count=0
        total_count=3
        
        # Check individual job results
        if [[ "${{ needs.collect-maricopa.result }}" == "success" ]]; then
          success_count=3  # Matrix strategy all succeeded
        else
          echo "[WARN] Some ZIP codes may have failed collection"
          success_count=1  # At least partial success if job didn't fail completely
        fi
        
        if [ $success_count -eq $total_count ]; then
          echo "status=success" >> $GITHUB_OUTPUT
          echo "message=[OK] Maricopa collection completed for all ZIP codes" >> $GITHUB_OUTPUT
        elif [ $success_count -gt 0 ]; then
          echo "status=partial" >> $GITHUB_OUTPUT  
          echo "message=[WARN] Maricopa collection completed for some ZIP codes" >> $GITHUB_OUTPUT
        else
          echo "status=failure" >> $GITHUB_OUTPUT
          echo "message=[FAIL] Maricopa collection failed for all ZIP codes" >> $GITHUB_OUTPUT
        fi
    
    - name: Create collection summary
      run: |
        cat << EOF >> $GITHUB_STEP_SUMMARY
        # Maricopa County Data Collection Summary
        
        **Collection Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        **Status**: ${{ steps.status.outputs.status }}
        **Message**: ${{ steps.status.outputs.message }}
        **ZIP Codes**: ${{ inputs.zip_codes || github.event.inputs.zip_codes || "85031,85033,85035" }}
        **Collection Mode**: ${{ inputs.collection_mode || github.event.inputs.collection_mode || "incremental" }}
        
        ## Results
        - Collection Status: ${{ needs.collect-maricopa.result }}
        - Runtime: ~${{ env.COLLECTION_TIMEOUT }} minutes maximum
        - Artifacts: Available for 7 days
        
        ## Next Steps
        - Data available for MLS collection workflow
        - LLM processing can begin if data quality is sufficient
        EOF
    
    - name: Create issue on failure
      if: steps.status.outputs.status == "failure"
      uses: actions/github-script@v7
      with:
        script: |
          const issueBody = `
          ## Maricopa Data Collection Failed
          
          **Run ID**: ${{ github.run_id }}
          **Timestamp**: ${new Date().toISOString()}
          **ZIP Codes**: ${{ inputs.zip_codes || github.event.inputs.zip_codes || "85031,85033,85035" }}
          **Collection Mode**: ${{ inputs.collection_mode || github.event.inputs.collection_mode || "incremental" }}
          
          ### Action Required
          - Check Maricopa API status and credentials
          - Review collection logs for error details
          - Consider manual retry or API key rotation
          - Update issue with resolution steps
          `;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Maricopa Collection Failed - ${new Date().toDateString()}`,
            body: issueBody,
            labels: ["automation", "maricopa-collection", "failure", "high-priority"]
          });
