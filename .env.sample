# Sample environment configuration for Phoenix Real Estate Data Collector
# Copy this to .env and update with your actual values
#
# IMPORTANT: 
# - Never commit your actual .env file to version control
# - Ensure .env is listed in .gitignore  
# - All placeholder values should be replaced with real credentials
# - For Windows: Use 'net start MongoDB' (as admin) to start MongoDB service

# ==============================================================================
# REQUIRED CONFIGURATION
# ==============================================================================

# Database configuration (REQUIRED)
# For MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/phoenix_real_estate
# For local MongoDB: mongodb://localhost:27017
MONGODB_URI=mongodb://localhost:27017
MONGODB_DATABASE=phoenix_real_estate
DATABASE_NAME=phoenix_real_estate

# Environment setting (REQUIRED)
# Options: development, testing, production
ENVIRONMENT=development

# Security (REQUIRED - generate a secure 32+ character key)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-secret-key-here-must-be-at-least-32-characters

# Maricopa County API (REQUIRED for Maricopa data collection)
# Register at: https://mcassessor.maricopa.gov/api
MARICOPA_API_KEY=your_maricopa_api_key_here

# ==============================================================================
# OPTIONAL CONFIGURATION
# ==============================================================================

# Maricopa API Configuration (optional overrides)
MARICOPA_BASE_URL=https://mcassessor.maricopa.gov
MARICOPA_RATE_LIMIT=1000
MARICOPA_TIMEOUT=30

# Logging configuration  
LOG_LEVEL=INFO
LOG_FORMAT=text

# Collection settings
MAX_REQUESTS_PER_HOUR=100
MIN_REQUEST_DELAY=3.6
TARGET_ZIP_CODES=85031,85033,85035,85048,85083,85254

# Proxy configuration (RECOMMENDED for Phoenix MLS scraping)
# Get credentials from: https://webshare.io
WEBSHARE_USERNAME=your_username
WEBSHARE_PASSWORD=your_password
WEBSHARE_API_KEY=your_webshare_api_key_here

# Processing configuration
# Requires local Ollama installation: https://ollama.ai
LLM_MODEL=llama2:7b
LLM_TIMEOUT=30

# Captcha solving service configuration (RECOMMENDED for Phoenix MLS)
# Get API key from https://2captcha.com or https://anti-captcha.com
CAPTCHA_API_KEY=your_2captcha_api_key_here
CAPTCHA_SERVICE=2captcha

# Phoenix MLS specific configuration (optional overrides)
PHOENIX_SOURCES_PHOENIX_MLS_CAPTCHA_ENABLED=true
PHOENIX_SOURCES_PHOENIX_MLS_CAPTCHA_SERVICE=2captcha
PHOENIX_SOURCES_PHOENIX_MLS_CAPTCHA_TIMEOUT=180
PHOENIX_SOURCES_PHOENIX_MLS_CAPTCHA_MAX_RETRIES=3
PHOENIX_SOURCES_PHOENIX_MLS_CAPTCHA_SCREENSHOT_ON_DETECTION=true

# Phoenix MLS rate limiting (be conservative to avoid blocks)
PHOENIX_MLS_RATE_LIMIT=60
PHOENIX_MLS_CONCURRENT_LIMIT=1

# Development tools (optional)
# For monitoring setup
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000

# ==============================================================================
# ADDITIONAL OPTIONAL CONFIGURATION
# ==============================================================================

# Request configuration
# User agent for web scraping (helps avoid bot detection)
USER_AGENT=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36

# Global timeout for HTTP requests (in seconds)
REQUEST_TIMEOUT=30

# Maximum number of retries for failed requests
MAX_RETRIES=3

# API rate limiting (requests per minute)
API_RATE_LIMIT=60

# Notification configuration (for error alerts)
# Uncomment and configure if you want email notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your_email@example.com
# SMTP_PASSWORD=your_app_specific_password
# NOTIFICATION_EMAIL=admin@example.com

# Performance monitoring (optional)
# Sentry DSN for error tracking in production
# SENTRY_DSN=https://your_sentry_dsn@sentry.io/project_id

# GitHub Actions configuration (for automated workflows)
# Only needed if using GitHub Actions for automated data collection
# GITHUB_TOKEN=your_github_personal_access_token

# Alternative proxy services (if not using WebShare)
# Option 1: SmartProxy
# SMARTPROXY_USERNAME=your_smartproxy_username
# SMARTPROXY_PASSWORD=your_smartproxy_password
# SMARTPROXY_ENDPOINT=gate.smartproxy.com:10000

# Option 2: Generic proxy
# PROXY_USERNAME=your_proxy_username
# PROXY_PASSWORD=your_proxy_password
# PROXY_ENDPOINT=http://proxy.example.com:8080

# Debug mode (set to True for development)
DEBUG=False

# ==============================================================================
# NOTES AND TIPS
# ==============================================================================
# 1. MongoDB Setup:
#    - Install MongoDB locally: https://www.mongodb.com/try/download/community
#    - Start service: 'net start MongoDB' (Windows, run as Administrator)
#    - Default connection: mongodb://localhost:27017
#
# 2. Maricopa API:
#    - Register for API key at: https://mcassessor.maricopa.gov/api
#    - Current success rate: ~84%
#
# 3. Phoenix MLS Scraping:
#    - Requires proxy service (WebShare recommended)
#    - May need CAPTCHA solving service (2captcha recommended)
#    - Be conservative with rate limits to avoid blocks
#
# 4. Local LLM Processing:
#    - Install Ollama: https://ollama.ai
#    - Pull model: 'ollama pull llama2:7b'
#    - Default endpoint: http://localhost:11434
#
# 5. Security:
#    - Generate SECRET_KEY: python -c "import secrets; print(secrets.token_urlsafe(32))"
#    - Use environment-specific .env files for different deployments
#    - Store production credentials in secure vault, not in files